DROP DATABASE influenza;
CREATE database influenza;
USE influenza;
CREATE TABLE weeklydata (
MMWR_WEEK INT NOT NULL,
WEEK_START INT NOT NULL,
WEEK_END INT NOT NULL,
FLU_RISK_LEVEL VARCHAR(10) NOT NULL,
INFLUENZA_SEASON INT NOT NULL,
HOSP_FLU_ICU_WEEKLY INT NOT NULL,
HOSP_FLU_ICU_CUMULATIVE INT NOT NULL,
LAB_FLU_TESTED INT NOT NULL,
LAB_FLU_POSITIVE INT NOT NULL,
LAB_FLU_PCT_POSITIVE INT NOT NULL,
LAB_TOT_A_POSITIVE INT NOT NULL,
LAB_TOT_B_POSITIVE INT NOT NULL,
LAB_TOT_H1N1_POSITIVE INT NOT NULL,
LAB_TOT_H3N2_POSITIVE INT NOT NULL,
LAB_TOT_NOTSUBTYPED_POSITIVE INT NOT NULL,
LAB_TOT_TESTED_CUMULATIVE INT NOT NULL,
LAB_TOT_POSITIVE_CUMULATIVE INT NOT NULL,
LAB_PCT_POSITIVE_CUMULATIVE INT NOT NULL,
ILI_TOT_ILI_ILINET INT NOT NULL,
ILI_TOT_SEEN_ILINET INT NOT NULL,
ILI_PCT_POSITIVE_ILINET INT NOT NULL,
ILI_TOT_ILI_ESSENCE INT NOT NULL,
ILI_TOT_SEEN_ESSENCE INT NOT NULL,
ILI_PCT_POSITIVE_ESSENCE INT NOT NULL,
PEDIATRIC_DEATHS INT NOT NULL,
RECORD_ID INT NOT NULL,
PRIMARY KEY (MMWR_WEEK)
);
###Risk level by year
SELECT * FROM weeklydata;
SELECT YEAR(STR_TO_DATE(WEEK_START, '%m/%d/%Y')) AS YEAR, 
       FLU_RISK_LEVEL, 
       COUNT(*) AS COUNT
FROM weeklydata
GROUP BY YEAR(STR_TO_DATE(WEEK_START, '%m/%d/%Y')), 
         FLU_RISK_LEVEL
ORDER BY YEAR(STR_TO_DATE(WEEK_START, '%m/%d/%Y')) ASC, 
         FLU_RISK_LEVEL ASC;
SELECT r.COR(LAB_FLU_POSITIVE, CASE FLU_RISK_LEVEL
                               WHEN 'decreasing' THEN 1
                               WHEN 'low' THEN 2
                               WHEN 'increasing' THEN 3
                               WHEN 'high' THEN 4
                               END) AS CORRELATION
FROM weeklydata;
###summary statistics of influenza positive cases
SELECT
STDDEV(LAB_FLU_POSITIVE) AS standard_dev,
MIN(LAB_FLU_POSITIVE) As Minimum,
SUM(LAB_FLU_POSITIVE) As Total,
MAX(LAB_FLU_POSITIVE) As Maximum,
AVG(LAB_FLU_POSITIVE) as Mean
From weeklydata;
###influenza subtype having high risk level###
SELECT 
    CASE 
        WHEN LAB_TOT_A_POSITIVE >= LAB_TOT_B_POSITIVE AND LAB_TOT_A_POSITIVE >= LAB_TOT_H1N1_POSITIVE AND LAB_TOT_A_POSITIVE >= LAB_TOT_H3N2_POSITIVE THEN 'A'
        WHEN LAB_TOT_B_POSITIVE >= LAB_TOT_A_POSITIVE AND LAB_TOT_B_POSITIVE >= LAB_TOT_H1N1_POSITIVE AND LAB_TOT_B_POSITIVE >= LAB_TOT_H3N2_POSITIVE THEN 'B'
        WHEN LAB_TOT_H1N1_POSITIVE >= LAB_TOT_A_POSITIVE AND LAB_TOT_H1N1_POSITIVE >= LAB_TOT_B_POSITIVE AND LAB_TOT_H1N1_POSITIVE >= LAB_TOT_H3N2_POSITIVE THEN 'H1N1'
        ELSE 'H3N2'
    END AS INFLUENZA_TYPE,
    COUNT(*) as COUNT
FROM weeklydata
WHERE FLU_RISK_LEVEL = 'high'
GROUP BY INFLUENZA_TYPE
ORDER BY COUNT DESC
LIMIT 1;
###Total positive cases and total samples tested per year
SELECT 
  YEAR(STR_TO_DATE(WEEK_START, '%m/%d/%Y')) AS YEAR, 
  SUM(LAB_FLU_POSITIVE) AS TOTAL_FLU_POSITIVE, 
  SUM(LAB_FLU_TESTED) AS TOTAL_SAMPLE_TESTED 
FROM 
  weeklydata 
GROUP BY 
  YEAR(STR_TO_DATE(WEEK_START, '%m/%d/%Y'));
  ###
SELECT 
  DATE_FORMAT(STR_TO_DATE(week_start, '%m/%d/%Y'), '%Y-%m') AS month_year,
  SUM(LAB_FLU_TESTED) AS total_sample_tested, 
  SUM(LAB_FLU_POSITIVE) AS total_flu_positive 
FROM 
  weeklydata
GROUP BY 
  month_year 
ORDER BY 
  month_year ASC;
